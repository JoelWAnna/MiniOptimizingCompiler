/*@
%------------------------------------------------------------------------------
\chapter{Debugging Infrastructure}
This chapter describes the classes in:
@*/
package debug;
/*@
These classes are designed to support simple debugging and testing efforts.

@*/
/** This class provides a mechanism for reporting internal errors.
 */
public class private Internal {
  public static void error(String msg) {
    System.out.println("INTERNAL ERROR: " + msg);
    System.exit(1);
  }
}

/** This class provides a simple debugging log.
 */
public class Log {
  import java.io.PrintStream;  // for compatibility with System.out/System.err
  private static PrintStream out = null;

  public static void on(PrintStream out) {
    Log.out = out;
  }

  public static void on()  { on(System.out); }
  public static void off() { on(null); }

  public static void print(String msg) {
    if (out!=null) {
      out.print(msg);
    }
  }

  public static void println(String msg) {
    if (out!=null) {
      out.println(msg);
    }
  }

  public static void println() {
    if (out!=null) {
      out.println();
    }
  }
}

/** This class provides a simple mechanism for formatted output.
 */
public class Screen {
  private int col = 0;

  public int getIndent() {
    return col;
  }

  public void indent(int n) {
    if (n<col) {
      System.out.println();
      col = 0;
    }
    for (; col<n; col++) {
      System.out.print(" ");
    }
  }

  public void println() {
    System.out.println();
    col = 0;
  }

  public void print(String s) {
    System.out.print(s);
    col += s.length();
  }

  public void print(int i) {
    print(Integer.toString(i));
  }

  public void print(String[] ids) {
    if (ids.length>0) {
      print(ids[0]);
      for (int i=1; i<ids.length; i++) {
        print(" ");
        print(ids[i]);
      }
    }
  }

  public void space() {
    print(" ");
  }
}

macro DisplayList(Xs, xs) {
  public static void display(Screen s, Xs xs)
    case Xs {
      int ind = s.getIndent();
      if (xs!=null) {
        xs.head.display(s);
        while ((xs=xs.next)!=null) {
          s.print(";");
          //s.println();
          s.println();
          s.indent(ind);
          xs.head.display(s);
        }
        s.indent(ind);
      }
    }
  }
